/**
    如果被提炼代码段对局部变量赋值，问题就变得复杂了。这里我们只讨论临时变量的问题。
 如果你发现源函数的参数被赋值，应该马上使用拆分变量（240）将其变成临时变量。

 被赋值的临时变量也分两种情况。
 较简单的情况是：这个变量只在被提炼代码段中使用。若果真如此，你可以将这个临时变量的声明移到被提炼代码段中，然后一起提炼出去。
 如果变量的初始化和使用离得有点儿远，可以用移动语句（223）把针对这个变量的操作放到一起。

 比较糟糕的情况是：被提炼代码段之外的代码也使用了这个变量。
 此时我需要返回修改后的值。我会用下面这个已经很眼熟的函数来展示该怎么做：
 */


function printOwing(invoice) {
    let outstanding = 0;

    printBanner();


    for (const o of invoice.orders) {
        outstanding += o.amount;
    }

    recordDueDate(invoice);
    printDetails(invoice, outstanding);
}



/**
    前面的重构我都一步到位地展示了结果，因为它们都很简单。但这次我会一步一步展示“做法”里的每个步骤。
    首先，把变量声明移动到使用处之前。
 */






