

//修改前
let a = height * width;


// 修改后
let area = height * width;


/**
动机
    好的命名是整洁编程的核心。变量可以很好地解释一段程序在干什么——如果变量名起得好的话。
    但我经常会把名字起错——有时是因为想得不够仔细，有时是因为我对问题的理解加深了，还有时是因为程序的用途随着用户的需求改变了。

    使用范围越广，名字的好坏就越重要。
    只在一行的lambda表达式中使用的变量，跟踪起来很容易——像这样的变量，
    我经常只用一个字母命名，因为变量的用途在这个上下文中很清晰。
    同理，短函数的参数名也常常很简单。不过在JavaScript这样的动态类型语言中，
    我喜欢把类型信息也放进名字里（于是变量名可能叫aCustomer）。

    对于作用域超出一次函数调用的字段，则需要更用心命名。这是我最花心思的地方。
 */


/**
机制

  如果变量被广泛使用，考虑运用封装变量（132）将其封装起来。

  找出所有使用该变量的代码，逐一修改。

  测试。

  如果在另一个代码库中使用了该变量，这就是一个“已发布变量”（published variable），此时不能进行这个重构。
  如果变量值从不修改，可以将其复制到一个新名字之下，然后逐一修改使用代码，每次修改后执行测试。

 */




































































